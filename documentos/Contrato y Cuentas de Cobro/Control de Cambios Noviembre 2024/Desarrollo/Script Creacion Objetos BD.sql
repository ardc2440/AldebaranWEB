INSERT INTO document_types (DOCUMENT_TYPE_NAME, DOCUMENT_TYPE_CODE)
     VALUES ('Solicitud Cancelación O.C.', 'C')
INSERT INTO document_types (DOCUMENT_TYPE_NAME, DOCUMENT_TYPE_CODE)
     VALUES ('Solicitud Cancelación Ped.', 'E')
INSERT INTO document_types (DOCUMENT_TYPE_NAME, DOCUMENT_TYPE_CODE)
     VALUES ('Solicitud Cierre de Pedido', 'F')

DECLARE @DocumentType int 

SELECT @DocumentType = DOCUMENT_TYPE_ID from document_types WHERE DOCUMENT_TYPE_CODE = 'C'

INSERT INTO status_document_types (STATUS_DOCUMENT_TYPE_NAME, STATUS_DOCUMENT_TYPE_CODE, DOCUMENT_TYPE_ID, NOTES, EDIT_MODE, STATUS_ORDER)
     VALUES('Pendiente', 'P', @DocumentType, 'La solicitud de cancelación de la orden de compra ha sido creada y esta pendiente de estudio', 0, 1)
INSERT INTO status_document_types (STATUS_DOCUMENT_TYPE_NAME, STATUS_DOCUMENT_TYPE_CODE, DOCUMENT_TYPE_ID, NOTES, EDIT_MODE, STATUS_ORDER)
     VALUES('Aprobada', 'A', @DocumentType, 'La solicitud de cancelación de la orden de compra ha sido aprobada, generando al cancelación de la orden de compra y la actualización de las referencias en tránsito', 0, 2)
INSERT INTO status_document_types (STATUS_DOCUMENT_TYPE_NAME, STATUS_DOCUMENT_TYPE_CODE, DOCUMENT_TYPE_ID, NOTES, EDIT_MODE, STATUS_ORDER)
     VALUES('Denegada', 'D', @DocumentType, 'La solicitud de cancelación de la orden de compra ha sido denegada, no se afecta la orden de compra ni las referencias en tránsito', 0, 3)


SELECT @DocumentType = DOCUMENT_TYPE_ID from document_types WHERE DOCUMENT_TYPE_CODE = 'E'

INSERT INTO status_document_types (STATUS_DOCUMENT_TYPE_NAME, STATUS_DOCUMENT_TYPE_CODE, DOCUMENT_TYPE_ID, NOTES, EDIT_MODE, STATUS_ORDER)
     VALUES('Pendiente', 'P', @DocumentType, 'La solicitud de cancelación del pedido ha sido creada y esta pendiente de estudio', 0, 1)
INSERT INTO status_document_types (STATUS_DOCUMENT_TYPE_NAME, STATUS_DOCUMENT_TYPE_CODE, DOCUMENT_TYPE_ID, NOTES, EDIT_MODE, STATUS_ORDER)
     VALUES('Aprobada', 'A', @DocumentType, 'La solicitud de cancelación del pedido ha sido aprobada, generando al cancelación del pedido y la actualización del inventario correspondiente', 0, 2)
INSERT INTO status_document_types (STATUS_DOCUMENT_TYPE_NAME, STATUS_DOCUMENT_TYPE_CODE, DOCUMENT_TYPE_ID, NOTES, EDIT_MODE, STATUS_ORDER)
     VALUES('Denegada', 'D', @DocumentType, 'La solicitud de cancelación del pedido ha sido denegada, no se afecta el pedido ni las referencias en descargadas', 0, 3)

SELECT @DocumentType = DOCUMENT_TYPE_ID from document_types WHERE DOCUMENT_TYPE_CODE = 'F'

INSERT INTO status_document_types (STATUS_DOCUMENT_TYPE_NAME, STATUS_DOCUMENT_TYPE_CODE, DOCUMENT_TYPE_ID, NOTES, EDIT_MODE, STATUS_ORDER)
     VALUES('Pendiente', 'P', @DocumentType, 'La solicitud de cierre del pedido ha sido creada y esta pendiente de estudio', 0, 1)
INSERT INTO status_document_types (STATUS_DOCUMENT_TYPE_NAME, STATUS_DOCUMENT_TYPE_CODE, DOCUMENT_TYPE_ID, NOTES, EDIT_MODE, STATUS_ORDER)
     VALUES('Aprobada', 'A', @DocumentType, 'La solicitud de cierre del pedido ha sido aprobada, generando el cierre del pedido y la actualización del inventario correspondiente', 0, 2)
INSERT INTO status_document_types (STATUS_DOCUMENT_TYPE_NAME, STATUS_DOCUMENT_TYPE_CODE, DOCUMENT_TYPE_ID, NOTES, EDIT_MODE, STATUS_ORDER)
     VALUES('Denegada', 'D', @DocumentType, 'La solicitud de cierre del pedido ha sido denegada, no se afecta el pedido ni las referencias en descargadas', 0, 3)
GO

INSERT INTO AspNetRoles (Id, ConcurrencyStamp, Name, NormalizedName)
     VALUES ('DA8921A0-1118-412F-86B0-408E3B69F776','EF1B3F7A-7DAC-4977-A264-F9BE8DD1AAFA','Gestión de solicitudes operativas','GESTIÓN DE SOLICITUDES OPERATIVAS')
INSERT INTO AspNetRoles (Id, ConcurrencyStamp, Name, NormalizedName)
	 VALUES ('AFCD1296-BF58-4F54-AA8F-AD6B049026EB','8E7F1034-518D-4EB9-85E8-0D462E7206F1','Consulta de solicitudes operativas','CONSULTA DE SOLICITUDES OPERATIVAS')
GO

CREATE TABLE cancellation_requests (
    CANCELLATION_REQUEST_ID INT IDENTITY(1,1) CONSTRAINT PK_CANCELLATION_REQUEST PRIMARY KEY, -- ID ÚNICO DE LA SOLICITUD
	DOCUMENT_TYPE_ID SMALLINT NOT NULL CONSTRAINT FK_CANCELLATION_REQUEST_DOCUMENT_TYPE FOREIGN KEY REFERENCES DOCUMENT_TYPES (DOCUMENT_TYPE_ID),
    DOCUMENT_NUMBER INT NOT NULL, -- Id De la Orden de Compra o del Pedido
    REQUEST_EMPLOYEE_ID INT NOT NULL, -- USUARIO QUE REALIZÓ LA SOLICITUD
    RESPONSE_EMPLOYEE_ID INT NULL,
	STATUS_DOCUMENT_TYPE_ID SMALLINT NOT NULL CONSTRAINT FK_CANCELLATION_REQUEST_STATUS_DOCUMENT_TYPE FOREIGN KEY REFERENCES STATUS_DOCUMENT_TYPES (STATUS_DOCUMENT_TYPE_ID), -- ESTADO DE LA SOLICITUD
    REQUEST_DATE DATETIME NOT NULL CONSTRAINT DF_CANCELLATION_REQUESTS_REQUESTED_DATE DEFAULT GETDATE(), 
	RESPONSE_DATE DATETIME, 
	RESPONSE_REASON VARCHAR(250),  
    CONSTRAINT FK_CANCELLATION_REQUESTS_REQUESTED_BY FOREIGN KEY (REQUEST_EMPLOYEE_ID) REFERENCES EMPLOYEES(EMPLOYEE_ID), 
	CONSTRAINT FK_CANCELLATION_REQUESTS_RESPONDED_BY FOREIGN KEY (RESPONSE_EMPLOYEE_ID) REFERENCES EMPLOYEES(EMPLOYEE_ID) 
)
GO

CREATE OR ALTER PROCEDURE SP_GET_CANCELLATION_REQUESTS
	@GetPendingRequest bit,
	@SearchKey VARCHAR(100) = '',
	@Skip INT,
    @Top INT,
	@TotalCount INT OUTPUT
AS
BEGIN	
    IF LEN(TRIM(@SearchKey)) = 0
		SET @SearchKey = NULL

	DECLARE @TABLA TABLE 
	(
		CANCELLATION_REQUEST_ID INT, 
		DOCUMENT_TYPE_NAME VARCHAR(30), 
		DOCUMENT_NUMBER INT, 
		REQUEST_BY VARCHAR(100), 
		RESPONSE_BY VARCHAR(100), 
		STATUS_DOCUMENT_TYPE_NAME VARCHAR(30), 
		REQUEST_DATE DATETIME,	
		RESPONSE_DATE DATETIME,	
		RESPONSE_REASON	VARCHAR(250),
		ORDER_NUMBER VARCHAR(10),	
		THIRD_PART VARCHAR(50),	
		IDENTITY_NUMBER VARCHAR(15)
	)
	
	INSERT INTO @TABLA
		 SELECT CANCELLATION_REQUEST_ID, f.DOCUMENT_TYPE_NAME, DOCUMENT_NUMBER, g.FULL_NAME REQUEST_BY, i.FULL_NAME RESPONSE_BY, h.STATUS_DOCUMENT_TYPE_NAME, 
				a.REQUEST_DATE, CASE WHEN RESPONSE_EMPLOYEE_ID IS NULL THEN NULL ELSE RESPONSE_DATE END RESPONSE_DATE, RESPONSE_REASON, d.ORDER_NUMBER, e.PROVIDER_NAME THIRD_PART, e.IDENTITY_NUMBER 
		   FROM cancellation_requests a
		   JOIN document_types b ON b.DOCUMENT_TYPE_ID = a.DOCUMENT_TYPE_ID
		   JOIN status_document_types c ON c.STATUS_DOCUMENT_TYPE_ID = a.STATUS_DOCUMENT_TYPE_ID	  
		   JOIN purchase_orders d ON d.PURCHASE_ORDER_ID = a.DOCUMENT_NUMBER
		   JOIN providers e ON e.PROVIDER_ID = d.PROVIDER_ID 	  
		   JOIN document_types f ON f.DOCUMENT_TYPE_ID = a.DOCUMENT_TYPE_ID
		   JOIN employees g ON g.EMPLOYEE_ID = a.REQUEST_EMPLOYEE_ID
		   JOIN status_document_types h ON h.STATUS_DOCUMENT_TYPE_ID = a.STATUS_DOCUMENT_TYPE_ID 
		   LEFT JOIN employees i ON i.EMPLOYEE_ID = a.RESPONSE_EMPLOYEE_ID
		  WHERE CASE WHEN c.STATUS_ORDER IN (2,3) THEN 0 ELSE 1 END = @GetPendingRequest
		    AND b.DOCUMENT_TYPE_CODE = 'C'  
		    AND ((d.ORDER_NUMBER LIKE '%'+TRIM(@SearchKey)+'%' 
			     OR e.PROVIDER_NAME LIKE '%'+TRIM(@SearchKey)+'%' 
				 OR e.IDENTITY_NUMBER LIKE '%'+TRIM(@SearchKey)+'%'
				 OR f.DOCUMENT_TYPE_NAME LIKE '%'+TRIM(@SearchKey)+'%'
				 OR g.FULL_NAME LIKE '%'+TRIM(@SearchKey)+'%'
				 OR h.STATUS_DOCUMENT_TYPE_NAME LIKE '%'+TRIM(@SearchKey)+'%'
				 OR i.FULL_NAME LIKE '%'+TRIM(@SearchKey)+'%') 
				 OR @SearchKey IS NULL)
		 UNION
		 SELECT CANCELLATION_REQUEST_ID, f.DOCUMENT_TYPE_NAME, DOCUMENT_NUMBER, g.FULL_NAME REQUEST_BY, i.FULL_NAME RESPONSE_BY, h.STATUS_DOCUMENT_TYPE_NAME, 
				a.REQUEST_DATE, CASE WHEN RESPONSE_EMPLOYEE_ID IS NULL THEN NULL ELSE RESPONSE_DATE END RESPONSE_DATE, RESPONSE_REASON, d.ORDER_NUMBER, e.CUSTOMER_NAME THIRD_PART, e.IDENTITY_NUMBER 
		   FROM cancellation_requests a
		   JOIN document_types b ON b.DOCUMENT_TYPE_ID = a.DOCUMENT_TYPE_ID
		   JOIN status_document_types c ON c.STATUS_DOCUMENT_TYPE_ID = a.STATUS_DOCUMENT_TYPE_ID	  
		   JOIN customer_orders d ON d.CUSTOMER_ORDER_ID = a.DOCUMENT_NUMBER
		   JOIN customers e ON e.CUSTOMER_ID = d.CUSTOMER_ID 	   
		   JOIN document_types f ON f.DOCUMENT_TYPE_ID = a.DOCUMENT_TYPE_ID
		   JOIN employees g ON g.EMPLOYEE_ID = a.REQUEST_EMPLOYEE_ID
		   JOIN status_document_types h ON h.STATUS_DOCUMENT_TYPE_ID = a.STATUS_DOCUMENT_TYPE_ID 
		   LEFT JOIN employees i ON i.EMPLOYEE_ID = a.RESPONSE_EMPLOYEE_ID
		  WHERE CASE WHEN c.STATUS_ORDER IN (2,3) THEN 0 ELSE 1 END = @GetPendingRequest
		    AND b.DOCUMENT_TYPE_CODE IN ('E', 'F')  
		    AND ((d.ORDER_NUMBER LIKE '%'+TRIM(@SearchKey)+'%' 
			     OR e.CUSTOMER_NAME LIKE '%'+TRIM(@SearchKey)+'%' 
				 OR e.IDENTITY_NUMBER LIKE '%'+TRIM(@SearchKey)+'%'
				 OR f.DOCUMENT_TYPE_NAME LIKE '%'+TRIM(@SearchKey)+'%'
				 OR g.FULL_NAME LIKE '%'+TRIM(@SearchKey)+'%'
				 OR h.STATUS_DOCUMENT_TYPE_NAME LIKE '%'+TRIM(@SearchKey)+'%'
				 OR i.FULL_NAME LIKE '%'+TRIM(@SearchKey)+'%') 
				 OR @SearchKey IS NULL)
	
	SELECT @TotalCount = COUNT(1)
      FROM @TABLA 

	SELECT CANCELLATION_REQUEST_ID, DOCUMENT_TYPE_NAME, DOCUMENT_NUMBER, REQUEST_BY, RESPONSE_BY, STATUS_DOCUMENT_TYPE_NAME, 
		   REQUEST_DATE, RESPONSE_DATE, RESPONSE_REASON, ORDER_NUMBER, THIRD_PART, IDENTITY_NUMBER
	  FROM @TABLA 
	 ORDER BY REQUEST_DATE
	OFFSET @Skip ROWS FETCH NEXT @Top ROWS ONLY
END 
GO
USE [master]
GO

/****** Object:  Database [AldebaranWEB]    Script Date: 7/10/2023 7:41:24 p. m. ******/
/*CREATE DATABASE [AldebaranWEB]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'AldebaranWEB', FILENAME = N'/var/opt/mssql/data/AldebaranWEB.mdf' , SIZE = 8192KB , MAXSIZE = UNLIMITED, FILEGROWTH = 65536KB )
 LOG ON 
( NAME = N'AldebaranWEB_log', FILENAME = N'/var/opt/mssql/data/AldebaranWEB_log.ldf' , SIZE = 8192KB , MAXSIZE = 2048GB , FILEGROWTH = 65536KB )
 WITH CATALOG_COLLATION = DATABASE_DEFAULT
GO

IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
	EXEC [AldebaranWEB].[dbo].[sp_fulltext_database] @action = 'enable'
GO

ALTER DATABASE [AldebaranWEB] SET ANSI_NULL_DEFAULT ON 
GO

ALTER DATABASE [AldebaranWEB] SET ANSI_NULLS ON 
GO

ALTER DATABASE [AldebaranWEB] SET ANSI_PADDING OFF 
GO

ALTER DATABASE [AldebaranWEB] SET ANSI_WARNINGS OFF 
GO

ALTER DATABASE [AldebaranWEB] SET ARITHABORT OFF 
GO

ALTER DATABASE [AldebaranWEB] SET AUTO_CLOSE OFF 
GO

ALTER DATABASE [AldebaranWEB] SET AUTO_SHRINK ON 
GO

ALTER DATABASE [AldebaranWEB] SET AUTO_UPDATE_STATISTICS ON 
GO

ALTER DATABASE [AldebaranWEB] SET CURSOR_CLOSE_ON_COMMIT ON 
GO

ALTER DATABASE [AldebaranWEB] SET CURSOR_DEFAULT  LOCAL 
GO

ALTER DATABASE [AldebaranWEB] SET CONCAT_NULL_YIELDS_NULL OFF 
GO

ALTER DATABASE [AldebaranWEB] SET NUMERIC_ROUNDABORT OFF 
GO

ALTER DATABASE [AldebaranWEB] SET QUOTED_IDENTIFIER OFF 
GO

ALTER DATABASE [AldebaranWEB] SET RECURSIVE_TRIGGERS ON 
GO

ALTER DATABASE [AldebaranWEB] SET  DISABLE_BROKER 
GO

ALTER DATABASE [AldebaranWEB] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO

ALTER DATABASE [AldebaranWEB] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO

ALTER DATABASE [AldebaranWEB] SET TRUSTWORTHY OFF 
GO

ALTER DATABASE [AldebaranWEB] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO

ALTER DATABASE [AldebaranWEB] SET PARAMETERIZATION SIMPLE 
GO

ALTER DATABASE [AldebaranWEB] SET READ_COMMITTED_SNAPSHOT OFF 
GO

ALTER DATABASE [AldebaranWEB] SET HONOR_BROKER_PRIORITY OFF 
GO

ALTER DATABASE [AldebaranWEB] SET RECOVERY FULL 
GO

ALTER DATABASE [AldebaranWEB] SET  MULTI_USER 
GO

ALTER DATABASE [AldebaranWEB] SET PAGE_VERIFY CHECKSUM  
GO

ALTER DATABASE [AldebaranWEB] SET DB_CHAINING OFF 
GO

ALTER DATABASE [AldebaranWEB] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF ) 
GO

ALTER DATABASE [AldebaranWEB] SET TARGET_RECOVERY_TIME = 60 SECONDS 
GO

ALTER DATABASE [AldebaranWEB] SET DELAYED_DURABILITY = DISABLED 
GO

ALTER DATABASE [AldebaranWEB] SET ACCELERATED_DATABASE_RECOVERY = OFF  
GO

ALTER DATABASE [AldebaranWEB] SET QUERY_STORE = OFF
GO

ALTER DATABASE [AldebaranWEB] SET  READ_WRITE 
GO
*/

USE [AldebaranWEB]
GO

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_ITEMS_LINE' AND object_id = OBJECT_ID('ITEMS'))
	DROP INDEX ITEMS.IND_ITEMS_LINE

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_ITEMS_NAME ' AND object_id = OBJECT_ID('ITEMS'))
	DROP INDEX ITEMS.IND_ITEMS_NAME 

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_ITEMS_INTERNAL_REFERENCE' AND object_id = OBJECT_ID('ITEMS'))
	DROP INDEX ITEMS.IND_ITEMS_INTERNAL_REFERENCE 
	
IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_ITEMS_LINE' AND object_id = OBJECT_ID('ITEM_REFERENCES'))
	DROP INDEX ITEM_REFERENCES.IND_REFERENCES_ITEM_ID 

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_ITEMS_LINE' AND object_id = OBJECT_ID('ITEM_REFERENCES'))
	DROP INDEX ITEM_REFERENCES.IND_REFERENCES_REFERENCE_NAME 

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_ITEMS_LINE' AND object_id = OBJECT_ID('ITEM_REFERENCES'))
	DROP INDEX ITEM_REFERENCES.IND_REFERENCES_INTERNAL_REFERENCE_CODE 

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_FORWARDER_CITY' AND object_id = OBJECT_ID('FORWARDERS'))
	DROP INDEX FORWARDERS.IND_FORWARDER_CITY 

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_FORWARDER_NAME' AND object_id = OBJECT_ID('FORWARDERS'))
	DROP INDEX FORWARDERS.IND_FORWARDER_NAME 

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_CUSTOMER_CITY' AND object_id = OBJECT_ID('CUSTOMERS'))
	DROP INDEX CUSTOMERS.IND_CUSTOMER_CITY 

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_CUSTOMER_CITY_IDENTIFICATION_NUMBER' AND object_id = OBJECT_ID('CUSTOMERS'))
	DROP INDEX CUSTOMERS.IND_CUSTOMER_CITY_IDENTIFICATION_NUMBER 

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_CUSTOMER_CITY_CUSTOMER_NAME' AND object_id = OBJECT_ID('CUSTOMERS'))
	DROP INDEX CUSTOMERS.IND_CUSTOMER_CITY_CUSTOMER_NAME 

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_PROVIDER_PROVIDER_NAME' AND object_id = OBJECT_ID('PROVIDERS'))
	DROP INDEX PROVIDERS.IND_PROVIDER_PROVIDER_NAME 

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_PROVIDER_IDENTITY_NUMBER' AND object_id = OBJECT_ID('PROVIDERS'))
	DROP INDEX PROVIDERS.IND_PROVIDER_IDENTITY_NUMBER 

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_SHIPPING_METHODS_NAME' AND object_id = OBJECT_ID('SHIPPING_METHODS'))
	DROP INDEX IND_SHIPPING_METHODS_NAME ON SHIPPING_METHODS 

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_PURCHASE_ORDERS_CREATION_DATE' AND object_id = OBJECT_ID('PURCHASE_ORDERS'))
	DROP INDEX IND_PURCHASE_ORDERS_CREATION_DATE ON PURCHASE_ORDERS 

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_PURCHASE_ORDERS_STATUS_DOCUMENT' AND object_id = OBJECT_ID('PURCHASE_ORDERS'))
	DROP INDEX IND_PURCHASE_ORDERS_STATUS_DOCUMENT ON PURCHASE_ORDERS 

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_PURCHASE_ORDERS_REQUEST_DATE' AND object_id = OBJECT_ID('PURCHASE_ORDERS'))
	DROP INDEX IND_PURCHASE_ORDERS_REQUEST_DATE ON PURCHASE_ORDERS 

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'UQIND_PURCHASE_ORDER_DETAILS' AND object_id = OBJECT_ID('PURCHASE_ORDER_DETAILS'))
	DROP INDEX UQIND_PURCHASE_ORDER_DETAILS ON PURCHASE_ORDER_DETAILS 

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_PURCHASE_ORDERS_ACTIVITIIES_EXECUTION_DATE' AND object_id = OBJECT_ID('PURCHASE_ORDER_ACTIVITIES'))
	DROP INDEX IND_PURCHASE_ORDERS_ACTIVITIIES_EXECUTION_DATE ON PURCHASE_ORDER_ACTIVITIES 

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_CUSTOMER_RESERVATIONS_ESTADO' AND object_id = OBJECT_ID('CUSTOMER_RESERVATIONS'))
	DROP INDEX IND_CUSTOMER_RESERVATIONS_ESTADO ON CUSTOMER_RESERVATIONS 

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_CUSTOMER_RESERVATIONS_CREATION_DATE' AND object_id = OBJECT_ID('CUSTOMER_RESERVATIONS'))
	DROP INDEX IND_CUSTOMER_RESERVATIONS_CREATION_DATE ON CUSTOMER_RESERVATIONS 

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_CUSTOMER_RESERVATIONS_RESERVATION_DATE' AND object_id = OBJECT_ID('CUSTOMER_RESERVATIONS'))
	DROP INDEX IND_CUSTOMER_RESERVATIONS_RESERVATION_DATE ON CUSTOMER_RESERVATIONS 

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_CUSTOMER_RESERVATIONS_CUSTOMER' AND object_id = OBJECT_ID('CUSTOMER_RESERVATIONS'))
	DROP INDEX IND_CUSTOMER_RESERVATIONS_CUSTOMER ON CUSTOMER_RESERVATIONS 

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_CUSTOMER_RESERVATIONS_CUSTOMER_ORDER' AND object_id = OBJECT_ID('CUSTOMER_RESERVATIONS'))
	DROP INDEX IND_CUSTOMER_RESERVATIONS_CUSTOMER_ORDER ON CUSTOMER_RESERVATIONS 

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_CUSTOMER_ORDER_ESTADO' AND object_id = OBJECT_ID('CUSTOMER_ORDERS'))
	DROP INDEX IND_CUSTOMER_ORDER_ESTADO ON CUSTOMER_ORDERS 

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_CUSTOMER_ORDER_FECHAPEDIDO' AND object_id = OBJECT_ID('CUSTOMER_ORDERS'))
	DROP INDEX IND_CUSTOMER_ORDER_FECHAPEDIDO ON CUSTOMER_ORDERS 

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_CUSTOMER_ORDER_CUSTOMER' AND object_id = OBJECT_ID('CUSTOMER_ORDERS'))
	DROP INDEX IND_CUSTOMER_ORDER_CUSTOMER ON CUSTOMER_ORDERS 

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_CUSTOMER_ORDER_ORDER_NUMBER' AND object_id = OBJECT_ID('CUSTOMER_ORDERS'))
	DROP INDEX IND_CUSTOMER_ORDER_ORDER_NUMBER ON CUSTOMER_ORDERS 

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IND_CUSTOMER_ORDER_CREACION_DATE' AND object_id = OBJECT_ID('CUSTOMER_ORDERS'))
	DROP INDEX IND_CUSTOMER_ORDER_CREACION_DATE ON CUSTOMER_ORDERS 





GO

IF OBJECT_ID('CUSTOMER_RESERVATION_DETAILS', 'U') IS NOT NULL
    DROP TABLE CUSTOMER_RESERVATION_DETAILS

IF OBJECT_ID('CUSTOMER_RESERVATIONS', 'U') IS NOT NULL
    DROP TABLE CUSTOMER_RESERVATIONS

IF OBJECT_ID('CUSTOMER_ORDER_DETAILS', 'U') IS NOT NULL
    DROP TABLE CUSTOMER_ORDER_DETAILS

IF OBJECT_ID('CUSTOMER_ORDERS', 'U') IS NOT NULL
    DROP TABLE CUSTOMER_ORDERS

IF OBJECT_ID('ADJUSTMENT_DETAILS', 'U') IS NOT NULL
    DROP TABLE ADJUSTMENT_DETAILS
	
IF OBJECT_ID('ADJUSTMENTS', 'U') IS NOT NULL
    DROP TABLE ADJUSTMENTS	

IF OBJECT_ID('PURCHASE_ORDER_DETAILS', 'U') IS NOT NULL
	DROP TABLE PURCHASE_ORDER_DETAILS

IF OBJECT_ID('PURCHASE_ORDER_ACTIVITIES', 'U') IS NOT NULL
	DROP TABLE PURCHASE_ORDER_ACTIVITIES

IF OBJECT_ID('CANCELED_PURCHASE_ORDERS', 'U') IS NOT NULL
	DROP TABLE CANCELED_PURCHASE_ORDERS

IF OBJECT_ID('MODIFIED_PURCHASE_ORDERS', 'U') IS NOT NULL
	DROP TABLE MODIFIED_PURCHASE_ORDERS
	
IF OBJECT_ID('PURCHASE_ORDER_DETAIL_LOG', 'U') IS NOT NULL
	DROP TABLE PURCHASE_ORDER_DETAIL_LOG

IF OBJECT_ID('PURCHASE_ORDER_LOG', 'U') IS NOT NULL
	DROP TABLE PURCHASE_ORDER_LOG
	
IF OBJECT_ID('PURCHASE_ORDERS', 'U') IS NOT NULL
	DROP TABLE PURCHASE_ORDERS

IF OBJECT_ID('CANCELLATION_REASONS', 'U') IS NOT NULL
	DROP TABLE CANCELLATION_REASONS

IF OBJECT_ID('MODIFICATION_REASONS', 'U') IS NOT NULL
	DROP TABLE MODIFICATION_REASONS
	
IF OBJECT_ID('STATUS_DOCUMENT_TYPES', 'U') IS NOT NULL
	DROP TABLE STATUS_DOCUMENT_TYPES
	
IF OBJECT_ID('ITEMS_AREA', 'U') IS NOT NULL
	DROP TABLE ITEMS_AREA	

IF OBJECT_ID('ACTIVITY_TYPES_AREA', 'U') IS NOT NULL
	DROP TABLE ACTIVITY_TYPES_AREA
	
IF OBJECT_ID('AREAS', 'U') IS NOT NULL
	DROP TABLE AREAS

IF OBJECT_ID('ALARMS', 'U') IS NOT NULL
	DROP TABLE ALARMS

IF OBJECT_ID('ALARM_MESSAGES', 'U') IS NOT NULL
	DROP TABLE ALARM_MESSAGES

IF OBJECT_ID('USERS_ALARM_TYPE', 'U') IS NOT NULL
	DROP TABLE USERS_ALARM_TYPE

IF OBJECT_ID('ALARM_TYPES', 'U') IS NOT NULL
	DROP TABLE ALARM_TYPES

IF OBJECT_ID('DOCUMENT_TYPES', 'U') IS NOT NULL
	DROP TABLE DOCUMENT_TYPES

IF OBJECT_ID('REFERENCES_WAREHOUSE', 'U') IS NOT NULL
	DROP TABLE REFERENCES_WAREHOUSE

IF OBJECT_ID('WAREHOUSES', 'U') IS NOT NULL
	DROP TABLE WAREHOUSES

IF OBJECT_ID('PROVIDER_REFERENCES', 'U') IS NOT NULL
    DROP TABLE PROVIDER_REFERENCES
	
IF OBJECT_ID('ITEM_REFERENCES', 'U') IS NOT NULL
    DROP TABLE ITEM_REFERENCES

IF OBJECT_ID('PACKAGING', 'U') IS NOT NULL
	DROP TABLE PACKAGING
	
IF OBJECT_ID('ITEMS', 'U') IS NOT NULL
    DROP TABLE ITEMS

IF OBJECT_ID('LINES', 'U') IS NOT NULL
    DROP TABLE LINES
		
IF OBJECT_ID('CURRENCIES', 'U') IS NOT NULL
    DROP TABLE CURRENCIES

IF OBJECT_ID('MEASURE_UNITS', 'U') IS NOT NULL
    DROP TABLE MEASURE_UNITS

IF OBJECT_ID('CUSTOMER_CONTACTS', 'U') IS NOT NULL
    DROP TABLE CUSTOMER_CONTACTS
	   
IF OBJECT_ID('USERS', 'U') IS NOT NULL
    DROP TABLE USERS

IF OBJECT_ID('EMPLOYEES', 'U') IS NOT NULL
    DROP TABLE EMPLOYEES

IF OBJECT_ID('CUSTOMERS', 'U') IS NOT NULL
    DROP TABLE CUSTOMERS

IF OBJECT_ID('PROVIDERS', 'U') IS NOT NULL
	DROP TABLE PROVIDERS

IF OBJECT_ID('PROCESS_SATELLITES', 'U') IS NOT NULL
	DROP TABLE PROCESS_SATELLITES

IF OBJECT_ID('IDENTITY_TYPES', 'U') IS NOT NULL
    DROP TABLE IDENTITY_TYPES

IF OBJECT_ID('ACTIVITY_TYPES', 'U') IS NOT NULL
	DROP TABLE ACTIVITY_TYPES

IF OBJECT_ID('SHIPMENT_FORWARDER_AGENT_METHODS', 'U') IS NOT NULL
	DROP TABLE SHIPMENT_FORWARDER_AGENT_METHODS

IF OBJECT_ID('FORWARDER_AGENTS', 'U') IS NOT NULL
	DROP TABLE FORWARDER_AGENTS

IF OBJECT_ID('SHIPMENT_METHODS', 'U') IS NOT NULL
	DROP TABLE SHIPMENT_METHODS

IF OBJECT_ID('FORWARDERS', 'U') IS NOT NULL
	DROP TABLE FORWARDERS

IF OBJECT_ID('CITIES', 'U') IS NOT NULL
    DROP TABLE CITIES

IF OBJECT_ID('DEPARTMENTS', 'U') IS NOT NULL
    DROP TABLE DEPARTMENTS

IF OBJECT_ID('COUNTRIES', 'U') IS NOT NULL
    DROP TABLE COUNTRIES

IF OBJECT_ID('SHIPPING_METHODS', 'U') IS NOT NULL
    DROP TABLE SHIPPING_METHODS

IF OBJECT_ID('ADJUSTMENT_REASONS', 'U') IS NOT NULL
	DROP TABLE ADJUSTMENT_REASONS

IF OBJECT_ID('ADJUSTMENT_TYPES', 'U') IS NOT NULL
	DROP TABLE ADJUSTMENT_TYPES

IF OBJECT_ID('RECORD_LOG_TYPES', 'U') IS NOT NULL
	DROP TABLE RECORD_LOG_TYPES
	
IF OBJECT_ID('AspNetUserTokens', 'U') IS NOT NULL
	DROP TABLE AspNetUserTokens

IF OBJECT_ID('AspNetUserRoles', 'U') IS NOT NULL
	DROP TABLE AspNetUserRoles

IF OBJECT_ID('AspNetUserLogins', 'U') IS NOT NULL
	DROP TABLE AspNetUserLogins

IF OBJECT_ID('AspNetUserClaims', 'U') IS NOT NULL
	DROP TABLE AspNetUserClaims

IF OBJECT_ID('AspNetRoleClaims', 'U') IS NOT NULL
	DROP TABLE AspNetRoleClaims

IF OBJECT_ID('AspNetUsers', 'U') IS NOT NULL
	DROP TABLE AspNetUsers

IF OBJECT_ID('AspNetRoles', 'U') IS NOT NULL
	DROP TABLE AspNetRoles


GO

/*security schema tables*/
CREATE TABLE [dbo].[AspNetRoles]
(
	[Id] [nvarchar](450) NOT NULL,
	[ConcurrencyStamp] [nvarchar](max) NULL,
	[Name] [nvarchar](256) NULL,
	[NormalizedName] [nvarchar](256) NULL,
    CONSTRAINT [PK_AspNetRoles] PRIMARY KEY CLUSTERED ([Id] ASC)
)
GO

CREATE TABLE [dbo].[AspNetUsers](
	[Id] [nvarchar](450) NOT NULL,
	[AccessFailedCount] [int] NOT NULL,
	[ConcurrencyStamp] [nvarchar](max) NULL,
	[Email] [nvarchar](256) NULL,
	[EmailConfirmed] [bit] NOT NULL,
	[LockoutEnabled] [bit] NOT NULL,
	[LockoutEnd] [datetimeoffset](7) NULL,
	[NormalizedEmail] [nvarchar](256) NULL,
	[NormalizedUserName] [nvarchar](256) NULL,
	[PasswordHash] [nvarchar](max) NULL,
	[PhoneNumber] [nvarchar](max) NULL,
	[PhoneNumberConfirmed] [bit] NOT NULL,
	[SecurityStamp] [nvarchar](max) NULL,
	[TwoFactorEnabled] [bit] NOT NULL,
	[UserName] [nvarchar](256) NULL,
	CONSTRAINT [PK_AspNetUsers] PRIMARY KEY CLUSTERED ([Id] ASC)
)
GO

CREATE TABLE [dbo].[AspNetRoleClaims](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[ClaimType] [nvarchar](max) NULL,
	[ClaimValue] [nvarchar](max) NULL,
	[RoleId] [nvarchar](450) NOT NULL,
    CONSTRAINT [PK_AspNetRoleClaims] PRIMARY KEY CLUSTERED (Id ASC),
	CONSTRAINT [FK_AspNetRoleClaims_AspNetRoles_RoleId] FOREIGN KEY([RoleId]) REFERENCES [dbo].[AspNetRoles] ([Id]) ON DELETE CASCADE,
	
)
GO

CREATE TABLE [dbo].[AspNetUserClaims](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[ClaimType] [nvarchar](max) NULL,
	[ClaimValue] [nvarchar](max) NULL,
	[UserId] [nvarchar](450) NOT NULL,
    CONSTRAINT [PK_AspNetUserClaims] PRIMARY KEY CLUSTERED ([Id] ASC),
	CONSTRAINT [FK_AspNetUserClaims_AspNetUsers_UserId] FOREIGN KEY([UserId]) REFERENCES [dbo].[AspNetUsers] ([Id]) ON DELETE CASCADE
) 
GO

CREATE TABLE [dbo].[AspNetUserLogins]
(
	[LoginProvider] [nvarchar](450) NOT NULL,
	[ProviderKey] [nvarchar](450) NOT NULL,
	[ProviderDisplayName] [nvarchar](max) NULL,
	[UserId] [nvarchar](450) NOT NULL,
    CONSTRAINT [PK_AspNetUserLogins] PRIMARY KEY CLUSTERED ([LoginProvider] ASC, [ProviderKey] ASC),
	CONSTRAINT [FK_AspNetUserLogins_AspNetUsers_UserId] FOREIGN KEY([UserId]) REFERENCES [dbo].[AspNetUsers] ([Id]) ON DELETE CASCADE
)
GO

CREATE TABLE [dbo].[AspNetUserRoles](
	[UserId] [nvarchar](450) NOT NULL,
	[RoleId] [nvarchar](450) NOT NULL,
    CONSTRAINT [PK_AspNetUserRoles] PRIMARY KEY CLUSTERED ([UserId] ASC,[RoleId] ASC),
	CONSTRAINT [FK_AspNetUserRoles_AspNetRoles_RoleId] FOREIGN KEY([RoleId]) REFERENCES [dbo].[AspNetRoles] ([Id]) ON DELETE CASCADE,
	CONSTRAINT [FK_AspNetUserRoles_AspNetUsers_UserId] FOREIGN KEY([UserId]) REFERENCES [dbo].[AspNetUsers] ([Id]) ON DELETE CASCADE
)
GO

CREATE TABLE [dbo].[AspNetUserTokens](
	[UserId] [nvarchar](450) NOT NULL,
	[LoginProvider] [nvarchar](450) NOT NULL,
	[Name] [nvarchar](450) NOT NULL,
	[Value] [nvarchar](max) NULL,
	CONSTRAINT [PK_AspNetUserTokens] PRIMARY KEY CLUSTERED ([UserId] ASC,[LoginProvider] ASC,[Name] ASC),
	CONSTRAINT [FK_AspNetUserTokens_AspNetUsers_UserId] FOREIGN KEY([UserId]) REFERENCES [dbo].[AspNetUsers] ([Id])
)
GO

/*non administrable tables*/
CREATE TABLE AREAS
(
  AREA_ID smallint NOT NULL IDENTITY(1,1),
  AREA_CODE varchar(10) NOT NULL,
  AREA_NAME varchar(50) NOT NULL,
  DESCRIPTION varchar(200),
  CONSTRAINT PK_AREA PRIMARY KEY (AREA_ID),
  CONSTRAINT UQ_AREA_CODE UNIQUE (AREA_CODE),
  CONSTRAINT UQ_AREA_NAME UNIQUE (AREA_NAME)
)
GO

CREATE TABLE DOCUMENT_TYPES
(
  DOCUMENT_TYPE_ID smallint NOT NULL IDENTITY(1,1),
  DOCUMENT_TYPE_NAME varchar(30) NOT NULL,
  DOCUMENT_TYPE_CODE char(1) NOT NULL,
  CONSTRAINT PK_DOCUMENT_TYPE PRIMARY KEY (DOCUMENT_TYPE_ID),
  CONSTRAINT UQ_DOCUMENT_TYPE_CODE UNIQUE (DOCUMENT_TYPE_CODE)
)
GO

CREATE TABLE ALARM_TYPES
(
  ALARM_TYPE_ID smallint NOT NULL IDENTITY(1,1),
  ALARM_TYPE_DESCRIPTION varchar(25) NOT NULL,
  IS_DEFAULT_ALARM_TYPE bit default 1 NOT NULL,
  DOCUMENT_TYPE_ID smallint NOT NULL,
  TABLE_NAME varchar(30) NOT NULL,
  FIELD varchar(30) NOT NULL,
  CONSTRAINT PK_ALARM_TYPE PRIMARY KEY (ALARM_TYPE_ID),
  CONSTRAINT FK_ALARM_TYPE_DOCUMENT_TYPE FOREIGN KEY (DOCUMENT_TYPE_ID) 
    REFERENCES DOCUMENT_TYPES (DOCUMENT_TYPE_ID)
)
GO

CREATE TABLE ALARM_MESSAGES
(
  ALARM_MESSAGE_ID integer NOT NULL IDENTITY(1,1),
  ALARM_TYPE_ID integer NOT NULL,
  ALARM_MESSAGE varchar(100) NOT NULL,
  CONSTRAINT PK_ALARM_MESSAGE PRIMARY KEY (ALARM_MESSAGE_ID)
)
GO

CREATE TABLE ALARMS
(
  ALARM_ID int NOT NULL IDENTITY(1,1),
  ALARM_TYPE_ID smallint NOT NULL,
  ALARM_GENERATION_DATE date NOT NULL,
  DOCUMENT_ID int NOT NULL,
  IS_ACTIVE bit DEFAULT 1 NOT NULL,
  ALARM_MESSAGE_ID int NOT NULL,
  CONSTRAINT PK_ALARM PRIMARY KEY (ALARM_ID),
  CONSTRAINT FK_ALARM_ALARM_MESSAGE FOREIGN KEY (ALARM_MESSAGE_ID) 
    REFERENCES ALARM_MESSAGES (ALARM_MESSAGE_ID),
  CONSTRAINT FK_ALARM_ALARM_TYPE FOREIGN KEY (ALARM_TYPE_ID) 
    REFERENCES ALARM_TYPES (ALARM_TYPE_ID)
)
GO

CREATE TABLE WAREHOUSES
(
  WAREHOUSE_ID smallint NOT NULL IDENTITY(1,1),
  WAREHOUSE_NAME varchar(30) NOT NULL,
  CONSTRAINT PK_WAREHOUSE PRIMARY KEY (WAREHOUSE_ID),
  CONSTRAINT UQ_WAREHOUSE_NAME UNIQUE (WAREHOUSE_NAME)
)
GO

CREATE TABLE COUNTRIES
(
	COUNTRY_ID smallint NOT NULL IDENTITY(1,1),
	COUNTRY_NAME varchar(30) NOT NULL,
	CONSTRAINT PK_COUNTRY PRIMARY KEY (COUNTRY_ID),
	CONSTRAINT UQ_COUNTRY_NAME UNIQUE (COUNTRY_NAME),
)
GO

CREATE TABLE DEPARTMENTS
(
	DEPARTMENT_ID int NOT NULL IDENTITY(1,1),
	DEPARTMENT_NAME varchar(30) NOT NULL,
	COUNTRY_ID smallint not null,
	CONSTRAINT PK_DEPARTMENT PRIMARY KEY (DEPARTMENT_ID),	
	CONSTRAINT FK_DEPARTMENT_COUNTRY FOREIGN KEY (COUNTRY_ID) 
	  REFERENCES COUNTRIES (COUNTRY_ID),
	CONSTRAINT UQ_DEPARTMENT_NAME UNIQUE (DEPARTMENT_NAME, COUNTRY_ID)	
)
GO

CREATE TABLE CITIES
(
  CITY_ID int NOT NULL IDENTITY(1,1),
  CITY_NAME varchar(40) NOT NULL,
  DEPARTMENT_ID int NOT NULL,
  CONSTRAINT PK_CITY PRIMARY KEY (CITY_ID), 
  CONSTRAINT UQ_CITY_NAME UNIQUE (CITY_NAME, DEPARTMENT_ID),
  CONSTRAINT FK_CITY_DEPARTAMENT FOREIGN KEY (DEPARTMENT_ID) 
    REFERENCES DEPARTMENTS (DEPARTMENT_ID)  
)
GO

CREATE TABLE LINES
(
  LINE_ID SMALLINT NOT NULL IDENTITY(1,1),
  LINE_CODE varchar(10) NOT NULL,
  LINE_NAME varchar(30) NOT NULL,
  IS_DEMON bit DEFAULT 0 NOT NULL,
  IS_ACTIVE bit DEFAULT 1 NOT NULL,
  CONSTRAINT PK_LINE PRIMARY KEY (LINE_ID),
  CONSTRAINT UQ_LINE_CODE UNIQUE (LINE_CODE),
  CONSTRAINT UQ_LINE_NAME UNIQUE (LINE_NAME)
)
GO

CREATE TABLE CURRENCIES
(
  CURRENCY_ID SMALLINT NOT NULL IDENTITY(1,1),
  CURRENCY_NAME varchar(30) NOT NULL,
  CONSTRAINT PK_CURRENCY PRIMARY KEY (CURRENCY_ID),
  CONSTRAINT UQ_MONEDAS_NOMBRE UNIQUE (CURRENCY_NAME)
)
GO

CREATE TABLE MEASURE_UNITS
(
  MEASURE_UNIT_ID SMALLINT NOT NULL IDENTITY(1,1),
  MEASURE_UNIT_NAME  varchar(30) NOT NULL,
  CONSTRAINT PK_MEASURE_UNIT PRIMARY KEY (MEASURE_UNIT_ID),
  CONSTRAINT UQ_MEASURE_UNIT_NAME UNIQUE (MEASURE_UNIT_NAME)
)
GO

CREATE TABLE ITEMS
(
    ITEM_ID int NOT NULL IDENTITY(1,1),
    LINE_ID smallint NOT NULL,
    INTERNAL_REFERENCE varchar(10) NOT NULL,
    ITEM_NAME varchar(50) NOT NULL,
    SUPPLIER_REFERENCE varchar(27) NOT NULL,
    SUPPLIER_ITEM_NAME varchar(50) NOT NULL,
    FOB_COST float NOT NULL,
    CURRENCY_ID smallint NOT NULL,
    NOTES varchar(250),
    IS_EXTERNAL_INVENTORY bit DEFAULT 0 NOT NULL,
    CIF_COST Float NOT NULL,
    VOLUME float,
    WEIGHT float,
    FOB_MEASURE_UNIT_ID smallint,
    CIF_MEASURE_UNIT_ID smallint,
    IS_DOMESTIC_PRODUCT bit DEFAULT 0 NOT NULL,
    IS_ACTIVE bit DEFAULT 1 NOT NULL,
    IS_CATALOG_VISIBLE bit DEFAULT 0 NOT NULL,
    CONSTRAINT PK_ITEMS PRIMARY KEY (ITEM_ID),
    CONSTRAINT UQ_ITEM_NAME UNIQUE (ITEM_NAME),
    CONSTRAINT UQ_INTERNAL_REF UNIQUE (INTERNAL_REFERENCE),
	CONSTRAINT FK_ITEM_LINE
	  FOREIGN KEY (LINE_ID) REFERENCES LINES (LINE_ID),
	CONSTRAINT FK_ITEM_CURRENCY
	  FOREIGN KEY (CURRENCY_ID) REFERENCES CURRENCIES (CURRENCY_ID),
	CONSTRAINT FK_ITEM_MEASURE_UNIT_CIF
	  FOREIGN KEY (CIF_MEASURE_UNIT_ID) REFERENCES MEASURE_UNITS (MEASURE_UNIT_ID),
	CONSTRAINT FK_ITEMS_MEASURE_UNIT_FOB
	  FOREIGN KEY (FOB_MEASURE_UNIT_ID) REFERENCES MEASURE_UNITS (MEASURE_UNIT_ID),
	CONSTRAINT CK_ITEMS_FOB_COST check (FOB_COST > 0),
	CONSTRAINT CK_ITEMS_WEIGHT check ((WEIGHT > 0) or (WEIGHT is null)),	
	CONSTRAINT CK_ITEMS_VOLUME check ((VOLUME > 0) or (VOLUME is null))
)
GO

CREATE TABLE ITEM_REFERENCES
(
  REFERENCE_ID integer NOT NULL IDENTITY(1,1),
  ITEM_ID integer NOT NULL,
  REFERENCE_CODE varchar(30) NOT NULL,
  INTERNAL_REFERENCE_CODE varchar(10),
  REFERENCE_NAME varchar(30) NOT NULL,
  PROVIDER_REFERENCE_NAME varchar(30),
  NOTES varchar(250),
  INVENTORY_QUANTITY integer DEFAULT 0 NOT NULL,
  ORDERED_QUANTITY integer DEFAULT 0 NOT NULL,
  RESERVED_QUANTITY integer DEFAULT 0 NOT NULL,
  WORK_IN_PROCESS_QUANTITY integer DEFAULT 0 NOT NULL,
  IS_ACTIVE bit DEFAULT 1,
  IS_SOLD_OUT bit DEFAULT 0,
  ALARM_MINIMUM_QUANTITY integer DEFAULT 0 NOT NULL,
  CONSTRAINT PK_REFERENCE PRIMARY KEY (REFERENCE_ID),
  CONSTRAINT UQ_REFERENCE_NAME UNIQUE (ITEM_ID,REFERENCE_NAME),
  CONSTRAINT FK_REFERENCE_ITEM FOREIGN KEY (ITEM_ID) REFERENCES ITEMS (ITEM_ID),
  CONSTRAINT UQ_REFERENCE_CODE UNIQUE (ITEM_ID,REFERENCE_CODE)  
)
GO

CREATE TABLE PACKAGING
(
    PACKAGING_ID SMALLINT NOT NULL IDENTITY(1,1),
    ITEM_ID int NOT NULL,
    WEIGHT float,
    HEIGHT float,
    WIDTH float,
    LENGTH float,
    QUANTITY int,
    CONSTRAINT PK_PACKAGING PRIMARY KEY (PACKAGING_ID),
	CONSTRAINT FK_PACKAGING_ITEMS
      FOREIGN KEY (ITEM_ID) REFERENCES ITEMS (ITEM_ID)
)
GO
  
CREATE TABLE ACTIVITY_TYPES
(
  ACTIVITY_TYPE_ID SMALLINT NOT NULL IDENTITY(1,1),
  ACTIVITY_TYPE_NAME varchar(80) NOT NULL,
  CONSTRAINT PK_ACTIVITY_TYPE PRIMARY KEY (ACTIVITY_TYPE_ID)
)
GO

CREATE TABLE IDENTITY_TYPES
(
  IDENTITY_TYPE_ID int NOT NULL IDENTITY(1,1),
  IDENTITY_TYPE_CODE char(3) NOT NULL,
  IDENTITY_TYPE_NAME varchar(30) NOT NULL,
  CONSTRAINT PK_IDENTITY_TYPE PRIMARY KEY (IDENTITY_TYPE_ID),
  CONSTRAINT UQ_IDENTITY_TYPE_CODE UNIQUE (IDENTITY_TYPE_CODE),
  CONSTRAINT UQ_IDENTITY_TYPE_NAME UNIQUE (IDENTITY_TYPE_NAME)
)
GO

CREATE TABLE FORWARDERS
(
  FORWARDER_ID integer NOT NULL IDENTITY(1,1),
  FORWARDER_NAME varchar(50) NOT NULL,
  PHONE1 varchar(20) NOT NULL,
  PHONE2 varchar(20),
  FAX varchar(22),
  FORWARDER_ADDRESS varchar(52) NOT NULL,
  MAIL1 varchar(30),
  MAIL2 varchar(30),
  CITY_ID integer NOT NULL,
  CONSTRAINT PK_FORWARDER PRIMARY KEY (FORWARDER_ID),
  CONSTRAINT UQ_FORWARDER_NAME UNIQUE (FORWARDER_NAME),
  CONSTRAINT FK_FORWARDER_CITY
	FOREIGN KEY (CITY_ID) REFERENCES CITIES (CITY_ID)
)
GO

CREATE TABLE FORWARDER_AGENTS
(
  FORWARDER_AGENT_ID int NOT NULL IDENTITY(1,1),
  FORWARDER_ID int NOT NULL,
  FORWARDER_AGENT_NAME varchar(50) NOT NULL,
  PHONE1 varchar(20) NOT NULL,
  PHONE2 varchar(20),
  FAX varchar(22),
  FORWARDER_AGENT_ADDRESS varchar(52) NOT NULL,
  CITY_ID INT NOT NULL,
  CONTACT varchar(30) NOT NULL,
  EMAIL1 varchar(30),
  EMAIL2 varchar(30),
  CONSTRAINT PK_FORWARDER_AGENT PRIMARY KEY (FORWARDER_AGENT_ID),
  CONSTRAINT UQ_FORWARDER_AGENT_NAME UNIQUE (FORWARDER_AGENT_NAME),
  CONSTRAINT FK_FORWARDER_AGENT_CITY FOREIGN KEY (CITY_ID) REFERENCES CITIES (CITY_ID),
  CONSTRAINT FK_FORWARDER_AGENT_FORWARDER 
	FOREIGN KEY (FORWARDER_ID) REFERENCES FORWARDERS (FORWARDER_ID)
)
GO

CREATE TABLE SHIPMENT_METHODS --embarque
(
  SHIPMENT_METHOD_ID smallint NOT NULL IDENTITY(1,1),
  SHIPMENT_METHOD_NAME varchar(30) NOT NULL,
  SHIPMENT_METHOD_NOTES varchar(150),
  CONSTRAINT PK_SHIPMENT_METHOD PRIMARY KEY (SHIPMENT_METHOD_ID),
  CONSTRAINT UQ_SHIPMENT_METHOD_NAME UNIQUE (SHIPMENT_METHOD_NAME)
)
GO

CREATE TABLE SHIPMENT_FORWARDER_AGENT_METHODS
(
  SHIPMENT_FORWARDER_AGENT_METHOD_ID smallint NOT NULL IDENTITY(1,1),
  SHIPMENT_METHOD_ID smallint NOT NULL,
  FORWARDER_AGENT_ID integer NOT NULL,
  CONSTRAINT PK_SHIPMENT_FORWARDER_AGENT_METHOD PRIMARY KEY (SHIPMENT_FORWARDER_AGENT_METHOD_ID),
  CONSTRAINT UQ_SHIPMENT_FORWARDER_AGENT_METHOD_FORWARDER_AGENT UNIQUE (SHIPMENT_METHOD_ID,FORWARDER_AGENT_ID),
  CONSTRAINT FK_SHIPMENT_FORWARDER_AGENT_METHOD_FORWARDER_AGENT FOREIGN KEY (FORWARDER_AGENT_ID) REFERENCES FORWARDER_AGENTS (FORWARDER_AGENT_ID),
  CONSTRAINT FK_SHIPMENT_FORWARDER_AGENT_METHOD_SHIPMENT_METHOD FOREIGN KEY (SHIPMENT_METHOD_ID) REFERENCES SHIPMENT_METHODS (SHIPMENT_METHOD_ID)
)
GO

CREATE TABLE ITEMS_AREA
(
	ITEM_ID int NOT NULL,
	AREA_ID smallint NOT NULL
	CONSTRAINT PK_ITEM_AREA PRIMARY KEY (ITEM_ID, AREA_ID),
	CONSTRAINT FK_ITEM_AREA_ITEM FOREIGN KEY (ITEM_ID) 
	  REFERENCES ITEMS (ITEM_ID),
	CONSTRAINT FK_ITEM_AREA_AREA FOREIGN KEY (AREA_ID) 
	  REFERENCES AREAS (AREA_ID)
)
GO

CREATE TABLE REFERENCES_WAREHOUSE
(
	REFERENCE_ID int NOT NULL,
	WAREHOUSE_ID smallint NOT NULL,
	QUANTITY INT NOT NULL, 
	CONSTRAINT PK_REFERENCE_WAREHOUSE PRIMARY KEY (REFERENCE_ID, WAREHOUSE_ID),	
	CONSTRAINT FK_ITEM_ITEM_WAREHOUSE_ITEM_REFERENCE FOREIGN KEY (REFERENCE_ID) 
	  REFERENCES ITEM_REFERENCES (REFERENCE_ID),
	CONSTRAINT FK_ITEM_WAREHOUSE_WAREHOUSE FOREIGN KEY (WAREHOUSE_ID) 
	  REFERENCES WAREHOUSES (WAREHOUSE_ID)
)
GO

CREATE TABLE CUSTOMERS
(
  CUSTOMER_ID INT NOT NULL IDENTITY(1,1),
  IDENTITY_TYPE_ID INT NOT NULL,
  IDENTITY_NUMBER VARCHAR(15) NOT NULL,
  CUSTOMER_NAME VARCHAR(50) NOT NULL,
  PHONE1 VARCHAR(20) NOT NULL,
  PHONE2 VARCHAR(20),
  FAX VARCHAR(22),
  CUSTOMER_ADDRESS VARCHAR(52) NOT NULL,
  CELL_PHONE VARCHAR(15),
  EMAIL1 VARCHAR(252),
  EMAIL2 VARCHAR(252),
  CITY_ID INT NOT NULL,
  EMAIL3 VARCHAR(252),
  SEND_EMAIL BIT DEFAULT 0 NOT NULL,
  CONSTRAINT PK_CUSTOMER PRIMARY KEY (CUSTOMER_ID),
  CONSTRAINT UQ_CUSTOMER_NAME UNIQUE (CUSTOMER_NAME),
  CONSTRAINT UQ_CUSTOMER_IDENTIFICATION UNIQUE (IDENTITY_NUMBER),
  CONSTRAINT FK_CUSTOMER_IDENTITY_TYPE FOREIGN KEY (IDENTITY_TYPE_ID) REFERENCES IDENTITY_TYPES (IDENTITY_TYPE_ID),
  CONSTRAINT FK_CUSTOMER_CITY FOREIGN KEY (CITY_ID) REFERENCES CITIES (CITY_ID)
)
GO

CREATE TABLE CUSTOMER_CONTACTS
(
  CUSTOMER_CONTACT_ID integer NOT NULL IDENTITY (1,1),
  CLIENT_ID integer NOT NULL,
  CUSTOMER_CONTACT_NAME varchar(50) NOT NULL,
  TITLE varchar(20),
  PHONE varchar(15),
  EMAIL varchar(30),
  CONSTRAINT PK_CUSTOMER_CONTACT PRIMARY KEY (CUSTOMER_CONTACT_ID),
  CONSTRAINT UQ_CUSTOMER_CONTACT UNIQUE (CLIENT_ID, CUSTOMER_CONTACT_NAME)
)
GO

CREATE TABLE EMPLOYEES
(
  EMPLOYEE_ID integer NOT NULL IDENTITY(1,1),
  IDENTITY_TYPE_ID integer NOT NULL,
  IDENTITY_NUMBER varchar(15) NOT NULL,
  FULL_NAME varchar(50) NOT NULL,
  POSITION varchar(30) NOT NULL,
  DEPARTMENT_ID integer NOT NULL,
  ACTIVE bit DEFAULT 1 NOT NULL,
  CONSTRAINT PK_EMPLOYEE PRIMARY KEY (EMPLOYEE_ID),
  CONSTRAINT UQ_EMPLOYEE_IDENTIFICATION_NUMBER UNIQUE (IDENTITY_NUMBER),
  CONSTRAINT UQ_EMPLOYEE_FULL_NAME UNIQUE (FULL_NAME),
  CONSTRAINT FK_EMPLOYE_DEPARTMENTS FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENTS(DEPARTMENT_ID),
  CONSTRAINT FK_EMPLOYE_IDENTITY_TYPE FOREIGN KEY (IDENTITY_TYPE_ID) REFERENCES IDENTITY_TYPES (IDENTITY_TYPE_ID)
)
GO

CREATE TABLE PROVIDERS
(
  PROVIDER_ID INT NOT NULL IDENTITY(1,1),
  IDENTITY_TYPE_ID INT NOT NULL,
  IDENTITY_NUMBER VARCHAR(15) NOT NULL,
  PROVIDER_CODE VARCHAR(10) NOT NULL,
  PROVIDER_NAME VARCHAR(50) NOT NULL,
  PROVIDER_ADDRESS VARCHAR(80),
  PHONE VARCHAR(20),
  FAX VARCHAR(22),
  EMAIL VARCHAR(30),
  CONTACT_PERSON VARCHAR(50),
  CITY_ID INT NOT NULL,
  CONSTRAINT PK_PROVIDER PRIMARY KEY (PROVIDER_ID),
  CONSTRAINT UQ_PROVIDER_PROVIDER_CODE UNIQUE (PROVIDER_CODE),
  CONSTRAINT UQ_PROVIDER_PROVIDER_NAME UNIQUE (PROVIDER_NAME),
  CONSTRAINT UQ_PROVIDER_IDENTITY_NUMBER UNIQUE (IDENTITY_NUMBER),
  CONSTRAINT FK_PROVIDER_IDENTITY_TYPE FOREIGN KEY (IDENTITY_TYPE_ID) REFERENCES IDENTITY_TYPES (IDENTITY_TYPE_ID),
  CONSTRAINT FK_PROVIDER_IDENTITY_CITY FOREIGN KEY (CITY_ID) REFERENCES CITIES (CITY_ID)
)
GO

CREATE TABLE PROVIDER_REFERENCES
(
  REFERENCE_ID integer NOT NULL,
  PROVIDER_ID integer NOT NULL,
  CONSTRAINT PK_PROVIDER_REFERENCE PRIMARY KEY (REFERENCE_ID,PROVIDER_ID),
  CONSTRAINT FK_PROVIDER_REFERENCE_REFERENCE FOREIGN KEY (REFERENCE_ID) REFERENCES ITEM_REFERENCES (REFERENCE_ID),
  CONSTRAINT FK_PROVIDER_REFERENCE_PROVIDER FOREIGN KEY (PROVIDER_ID) REFERENCES PROVIDERS (PROVIDER_ID)
)
GO

CREATE TABLE SHIPPING_METHODS --envio--
(
  SHIPPING_METHOD_ID SMALLINT NOT NULL IDENTITY(1,1),
  SHIPPING_METHOD_NAME varchar(30) NOT NULL,
  SHIPPING_METHOD_NOTES varchar(150),
  CONSTRAINT PK_SHIPPING_METHOD PRIMARY KEY (SHIPPING_METHOD_ID),
  CONSTRAINT UQ_SHIPPING_METHOD_NAME UNIQUE (SHIPPING_METHOD_NAME)
)
GO

CREATE TABLE ADJUSTMENT_REASONS
(
  ADJUSTMENT_REASON_ID SMALLINT NOT NULL IDENTITY (1,1),
  ADJUSTMENT_REASON_NAME varchar(30) NOT NULL,
  ADJUSTMENT_REASON_NOTES varchar(150),  
  CONSTRAINT PK_ADJUSTMENT_REASON PRIMARY KEY (ADJUSTMENT_REASON_ID),
  CONSTRAINT UQ_ADJUSTMENT_REASON_NAME UNIQUE (ADJUSTMENT_REASON_NAME)
)
GO

CREATE TABLE CANCELLATION_REASONS
(
  CANCELLATION_REASON_ID SMALLINT NOT NULL IDENTITY(1,1),
  CANCELLATION_REASON_NAME varchar(30) NOT NULL,
  DOCUMENT_TYPE_ID SMALLINT NOT NULL,
  NOTES varchar(200),
  CONSTRAINT PK_CANCELLATION_REASON PRIMARY KEY (CANCELLATION_REASON_ID),
  CONSTRAINT FK_CANCELLATION_REASON_DOCUMENT_TYPE FOREIGN KEY (DOCUMENT_TYPE_ID) REFERENCES DOCUMENT_TYPES (DOCUMENT_TYPE_ID),
  CONSTRAINT UQ_CANCELLATION_REASON UNIQUE (DOCUMENT_TYPE_ID, CANCELLATION_REASON_NAME)
)
GO

CREATE TABLE MODIFICATION_REASONS
(
  MODIFICATION_REASON_ID SMALLINT NOT NULL IDENTITY(1,1),
  MODIFICATION_REASON_NAME varchar(30) NOT NULL,
  DOCUMENT_TYPE_ID SMALLINT NOT NULL,
  NOTES varchar(200),
  CONSTRAINT PK_MODIFICATION_REASON PRIMARY KEY (MODIFICATION_REASON_ID),
  CONSTRAINT FK_MODIFICATION_REASON_DOCUMENT_TYPE FOREIGN KEY (DOCUMENT_TYPE_ID) REFERENCES DOCUMENT_TYPES (DOCUMENT_TYPE_ID),
  CONSTRAINT UQ_MODIFICATION_REASON UNIQUE (DOCUMENT_TYPE_ID, MODIFICATION_REASON_NAME)
)
GO

CREATE TABLE USERS
(
  [USER_ID] integer NOT NULL IDENTITY(1,1),
  USER_LOGIN varchar(15) NOT NULL,
  IS_ACTIVE bit DEFAULT 0 NOT NULL ,
  EMPLOYEE_ID integer NOT NULL,
  USER_PASSWORD varchar(20) NOT NULL,
  CONSTRAINT PK_USER PRIMARY KEY ([USER_ID]),
  CONSTRAINT FK_USER_EMPLOYEE FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES (EMPLOYEE_ID)
)
GO

CREATE TABLE USERS_ALARM_TYPE
(
  ALARM_TYPE_ID smallint NOT NULL,
  [USER_ID] integer NOT NULL,
  VISUALIZE bit DEFAULT 1 NOT NULL,
  DEACTIVATES bit DEFAULT 0 NOT NULL,
  CONSTRAINT PK_USER_ALARM_TYPE PRIMARY KEY (ALARM_TYPE_ID,[USER_ID]),
  CONSTRAINT FK_USER_ALARM_TYPE_ALARM_TYPE FOREIGN KEY (ALARM_TYPE_ID) REFERENCES ALARM_TYPES (ALARM_TYPE_ID),
  CONSTRAINT FK_USER_ALARM_TYPE_USER FOREIGN KEY ([USER_ID]) REFERENCES USERS ([USER_ID])  
)
GO

CREATE TABLE ACTIVITY_TYPES_AREA
(
  ACTIVITY_TYPE_ID SMALLINT NOT NULL,
  AREA_ID SMALLINT NOT NULL,
  CONSTRAINT PK_ACTIVITY_TYPE_AREA PRIMARY KEY (ACTIVITY_TYPE_ID,AREA_ID),
  CONSTRAINT FK_ACTIVITY_TYPE_AREA_AREA FOREIGN KEY (AREA_ID) REFERENCES AREAS (AREA_ID),
  CONSTRAINT FK_ACTIVITY_TYPE_AREA_ACTIVITY_TYPE FOREIGN KEY (ACTIVITY_TYPE_ID) REFERENCES ACTIVITY_TYPES (ACTIVITY_TYPE_ID)
)
GO

CREATE TABLE STATUS_DOCUMENT_TYPES
(
	STATUS_DOCUMENT_TYPE_ID SMALLINT NOT NULL IDENTITY(1,1),
	STATUS_DOCUMENT_TYPE_NAME VARCHAR(30) NOT NULL,
	DOCUMENT_TYPE_ID SMALLINT NOT NULL,
	NOTES VARCHAR(100) NOT NULL,
	CONSTRAINT PK_STATUS_DOCUMENT_TYPE PRIMARY KEY (STATUS_DOCUMENT_TYPE_ID),
	CONSTRAINT FK_STATUS_DOCUMENT_TYPE_DOCUMENT_TYPE FOREIGN KEY (DOCUMENT_TYPE_ID) REFERENCES DOCUMENT_TYPES (DOCUMENT_TYPE_ID),  
	CONSTRAINT UQ_STATUS_DOCUMENT_TYPE_NAME UNIQUE (DOCUMENT_TYPE_ID, STATUS_DOCUMENT_TYPE_NAME)
)
GO

CREATE TABLE RECORD_LOG_TYPES
(
	RECORD_LOG_TYPE_ID SMALLINT NOT NULL IDENTITY(1,1),
	RECORD_LOG_TYPE_NAME VARCHAR(20) NOT NULL
	CONSTRAINT PK_RECORD_LOG_TYPE PRIMARY KEY (RECORD_LOG_TYPE_ID),
	CONSTRAINT UQ_RECORD_LOG_TYPE UNIQUE (RECORD_LOG_TYPE_NAME) 
)
GO

CREATE TABLE PROCESS_SATELLITES
(
  PROCESS_SATELLITE_ID INT NOT NULL IDENTITY(1,1),
  PROCESS_SATELLITE_NAME VARCHAR(100),
  PROCESS_SATELLITE_ADDRESS VARCHAR(100),
  IDENTITY_TYPE_ID INT NOT NULL,
  IDENTITY_NUMBER VARCHAR(15) NOT NULL,
  PHONE VARCHAR(20),
  FAX VARCHAR(20),
  EMAIL VARCHAR(30),
  CITY_ID INT,
  LEGAL_REPRESENTATIVE VARCHAR(50),
  IS_ACTIVE BIT DEFAULT 1 NOT NULL,
  CONSTRAINT PK_PROCESS_SATELLITE PRIMARY KEY (PROCESS_SATELLITE_ID),
  CONSTRAINT FK_PROCESS_SATELLITE_IDENTITY_TYPES FOREIGN KEY (IDENTITY_TYPE_ID) REFERENCES IDENTITY_TYPES (IDENTITY_TYPE_ID),
  CONSTRAINT FK_PROCESS_SATELLITE_CITIES FOREIGN KEY (CITY_ID) REFERENCES CITIES (CITY_ID),
  CONSTRAINT UQ_PROCESS_SATELLITE_NAME UNIQUE (PROCESS_SATELLITE_NAME)
)
GO

/*ADJUSTMENT INVENTORY*/
CREATE TABLE ADJUSTMENT_TYPES
(
	ADJUSTMENT_TYPE_ID SMALLINT NOT NULL IDENTITY(1,1),
	ADJUSTMENT_TYPE_NAME VARCHAR(30) NOT NULL,
	CONSTRAINT PK_ADJUSTMENT_TYPE PRIMARY KEY (ADJUSTMENT_TYPE_ID),
	CONSTRAINT UQ_ADJUSTMENT_TYPE_NAME UNIQUE (ADJUSTMENT_TYPE_NAME)
)
GO

CREATE TABLE ADJUSTMENTS
(
  ADJUSTMENT_ID INT NOT NULL IDENTITY(1,1),
  ADJUSTMENT_DATE DATE DEFAULT GETDATE() NOT NULL,
  ADJUSTMENT_REASON_ID SMALLINT NOT NULL,
  ADJUSTMENT_TYPE_ID SMALLINT NOT NULL,  
  EMPLOYEE_ID INT NOT NULL,
  NOTES VARCHAR(250),
  CREATION_DATE DATETIME DEFAULT GETDATE() NOT NULL,
  CONSTRAINT PK_ADJUSTMENTS PRIMARY KEY (ADJUSTMENT_ID),
  CONSTRAINT FK_ADJUSTMENT_ADJUSTMENT_TYPE FOREIGN KEY (ADJUSTMENT_TYPE_ID) REFERENCES ADJUSTMENT_TYPES (ADJUSTMENT_TYPE_ID),
  CONSTRAINT FK_ADJUSTMENT_ADJUSTMENT_RESON FOREIGN KEY (ADJUSTMENT_REASON_ID) REFERENCES ADJUSTMENT_REASONS (ADJUSTMENT_REASON_ID),
  CONSTRAINT FK_ADJUSTMENT_EMPLOYEES FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES (EMPLOYEE_ID)
)
GO

CREATE TABLE ADJUSTMENT_DETAILS
(
  ADJUSTMENT_DETAIL_ID int NOT NULL IDENTITY(1,1),
  ADJUSTMENT_ID INT NOT NULL,
  REFERENCE_ID int NOT NULL,
  WAREHOUSE_ID SMALLINT NOT NULL,
  QUANTITY int NOT NULL,
  CONSTRAINT PK_ADJUSTMENT_DETAIL PRIMARY KEY (ADJUSTMENT_DETAIL_ID),
  CONSTRAINT FK_ADJUSTMENT_DETAIL_ADJUSTMENT FOREIGN KEY (ADJUSTMENT_ID) REFERENCES ADJUSTMENTS (ADJUSTMENT_ID),
  CONSTRAINT FK_ADJUSTMENT_DETAIL_ITEM_REFERENCES FOREIGN KEY (REFERENCE_ID) REFERENCES ITEM_REFERENCES (REFERENCE_ID),
  CONSTRAINT FK_ADJUSTMENT_DETAIL_WAREHOUSE FOREIGN KEY (WAREHOUSE_ID) REFERENCES WAREHOUSES (WAREHOUSE_ID),
  CONSTRAINT CK_ADJUSTMENT_DETAIL_QUANTITY CHECK (QUANTITY > 0),
  CONSTRAINT UQ_ADJUSTMENT_DETAIL UNIQUE (ADJUSTMENT_ID, REFERENCE_ID, WAREHOUSE_ID) 
)
GO

/* PURCHASE ORDERS */
CREATE TABLE PURCHASE_ORDERS
(
  PURCHASE_ORDER_ID int NOT NULL IDENTITY(1,1),
  ORDER_NUMBER varchar(10) NOT NULL,
  REQUEST_DATE DATE NOT NULL,
  EXPECTED_RECEIPT_DATE DATE NOT NULL,
  REAL_RECEIPT_DATE DATE,
  PROVIDER_ID int NOT NULL,
  FORWARDER_AGENT_ID int,
  FORWARDER_METHOD_ID int,
  EMPLOYEE_ID int NOT NULL,
  STATUS_DOCUMENT_TYPE_ID SMALLINT DEFAULT 1 NOT NULL,  
  IMPORT_NUMBER varchar(20),
  EMBARKATION_PORT varchar(50) DEFAULT ' ' NOT NULL,
  PROFORMA_NUMBER varchar(20) DEFAULT ' ' NOT NULL,
  CREATION_DATE DATETIME DEFAULT GETDATE()  NOT NULL,
  CONSTRAINT PK_PURCHASE_ORDER PRIMARY KEY (PURCHASE_ORDER_ID),
  CONSTRAINT UQ_PURCHASE_ORDER_ORDER_NUMBER UNIQUE (ORDER_NUMBER),
  CONSTRAINT FK_PURCHASE_ORDER_FORWARDER_AGENT FOREIGN KEY (FORWARDER_AGENT_ID) REFERENCES FORWARDER_AGENTS (FORWARDER_AGENT_ID),
  CONSTRAINT FK_PURCHASE_ORDER_EMPLOYEE FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES (EMPLOYEE_ID),
  CONSTRAINT CK_PURCHASE_ORDER_REAL_RECEIPT_DATE  check ((REAL_RECEIPT_DATE is null ) or (REQUEST_DATE <= REAL_RECEIPT_DATE))
)
GO

CREATE TABLE PURCHASE_ORDER_DETAILS
(
  PURCHASE_ORDER_DETAIL_ID INT NOT NULL IDENTITY(1,1),
  PURCHASE_ORDER_ID INT NOT NULL,
  REFERENCE_ID INT NOT NULL,
  WAREHOUSE_ID SMALLINT NOT NULL,
  RECEIVED_QUANTITY INT DEFAULT 0 NOT NULL,
  REQUESTED_QUANTITY INT DEFAULT 0 NOT NULL,  
  CONSTRAINT PK_PURCHASE_ORDER_DETAILS PRIMARY KEY (PURCHASE_ORDER_DETAIL_ID),
  CONSTRAINT FK_PURCHASE_ORDER_DETAILS_PURCHASE_ORDER FOREIGN KEY (PURCHASE_ORDER_ID) REFERENCES PURCHASE_ORDERS (PURCHASE_ORDER_ID),
  CONSTRAINT FK_PURCHASE_ORDER_DETAILS_ITEM_REFERENCE FOREIGN KEY (REFERENCE_ID) REFERENCES ITEM_REFERENCES (REFERENCE_ID),
  CONSTRAINT FK_PURCHASE_ORDER_DETAILS_ITEM_WAREHOUSE FOREIGN KEY (WAREHOUSE_ID) REFERENCES WAREHOUSES (WAREHOUSE_ID), 	
  CONSTRAINT CK_PURCHASE_ORDER_DETAILS_RECEIVED_QUANTITY CHECK (RECEIVED_QUANTITY >= 0),
  CONSTRAINT CK_PURCHASE_ORDER_DETAILS_REQUESTED_QUANTITY CHECK (REQUESTED_QUANTITY > 0)  
)
GO

CREATE TABLE PURCHASE_ORDER_ACTIVITIES
(
  PURCHASE_ORDER_ACTIVITY_ID int NOT NULL IDENTITY(1,1),
  PURCHASE_ORDER_ID int NOT NULL,
  EXECUTION_DATE DATETIME DEFAULT GETDATE() NOT NULL,
  ACTIVITY_DESCRIPTION varchar(500) NOT NULL,
  CREATION_DATE DATETIME DEFAULT GETDATE() NOT NULL,
  CONSTRAINT PK_ACTORDEN PRIMARY KEY (PURCHASE_ORDER_ACTIVITY_ID),
  CONSTRAINT FK_PURCHASE_ORDER_ACTIVITY_PURCHASE_ORDER FOREIGN KEY (PURCHASE_ORDER_ID) REFERENCES PURCHASE_ORDERS (PURCHASE_ORDER_ID)
)
GO

CREATE TABLE CANCELED_PURCHASE_ORDERS
(
  PURCHASE_ORDER_ID int NOT NULL,
  CANCELLATION_REASON_ID SMALLINT NOT NULL,
  EMPLOYEE_ID INT NOT NULL,
  CANCELLATION_DATE DATETIME DEFAULT GETDATE() NOT NULL,
  CONSTRAINT PK_CANCELED_PURCHASE_ORDER PRIMARY KEY (PURCHASE_ORDER_ID),
  CONSTRAINT FK_CANCELED_PURCHASE_ORDER_PURCHASE_ORDER FOREIGN KEY (PURCHASE_ORDER_ID) REFERENCES PURCHASE_ORDERS (PURCHASE_ORDER_ID),
  CONSTRAINT FK_CANCELED_PURCHASE_ORDER_CANCELLATION FOREIGN KEY (CANCELLATION_REASON_ID) REFERENCES CANCELLATION_REASONS (CANCELLATION_REASON_ID),
  CONSTRAINT FK_CANCELED_PURCHASE_ORDER_EMPLOYE FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES (EMPLOYEE_ID)
)
GO

CREATE TABLE MODIFIED_PURCHASE_ORDERS
(
  MODIFIED_PURCHASE_ORDER_ID INT NOT NULL IDENTITY(1,1),
  PURCHASE_ORDER_ID int NOT NULL,
  MODIFICATION_REASON_ID SMALLINT NOT NULL,
  EMPLOYEE_ID INT NOT NULL,
  MODIFICATION_DATE DATETIME DEFAULT GETDATE() NOT NULL,
  CONSTRAINT PK_MODIFIED_PURCHASE_ORDER PRIMARY KEY (MODIFIED_PURCHASE_ORDER_ID),
  CONSTRAINT FK_MODIFIED_PURCHASE_ORDER_PURCHASE_ORDER FOREIGN KEY (PURCHASE_ORDER_ID) REFERENCES PURCHASE_ORDERS (PURCHASE_ORDER_ID),
  CONSTRAINT FK_MODIFIED_PURCHASE_ORDER_MODIFICATION_REASON FOREIGN KEY (MODIFICATION_REASON_ID) REFERENCES MODIFICATION_REASONS (MODIFICATION_REASON_ID),
  CONSTRAINT FK_MODIFIED_PURCHASE_ORDER_EMPLOYE FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES (EMPLOYEE_ID)
)
GO

CREATE TABLE PURCHASE_ORDER_LOG
(
	PURCHASE_ORDER_LOG_ID INT NOT NULL IDENTITY(1,1),
	RECORD_LOG_TYPE_ID SMALLINT NOT NULL,
	DATA_STRING VARCHAR(MAX) NOT NULL 
)
GO

CREATE TABLE PURCHASE_ORDER_DETAIL_LOG
(
	PURCHASE_ORDER_DETAIL_LOG_ID INT NOT NULL IDENTITY(1,1),
	RECORD_LOG_TYPE_ID SMALLINT NOT NULL,
	DATA_STRING VARCHAR(MAX) NOT NULL 
)
GO

/*CUSTOMER ORDERS*/
CREATE TABLE CUSTOMER_ORDERS
(
  CUSTOMER_ORDER_ID INT NOT NULL IDENTITY(1,1),
  CUSTOMER_ID INT NOT NULL,
  ORDER_NUMBER VARCHAR(10) NOT NULL,
  ORDER_DATE DATE NOT NULL,
  ESTIMATED_DELIVERY_DATE DATE NOT NULL,
  AGREED_DELIVERY CHAR(1) NOT NULL,
  COMMENTS VARCHAR(250),
  EMPLOYEE_ID INT NOT NULL,
  STATUS_DOCUMENT_TYPE_ID SMALLINT NOT NULL,
  CREATION_DATE DATETIME DEFAULT GETDATE() NOT NULL,
  CUSTOMER_COMMENTS VARCHAR(250),
  CONSTRAINT PK_CUSTOMER_ORDER PRIMARY KEY (CUSTOMER_ORDER_ID),
  CONSTRAINT UQ_CUSTOMER_ORDER_NUMBER UNIQUE (ORDER_NUMBER),
  CONSTRAINT FK_CUSTOMER_ORDER_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS (CUSTOMER_ID),
  CONSTRAINT FK_CUSTOMER_ORDER_EMPLOYEES FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES (EMPLOYEE_ID),
  CONSTRAINT FK_CUSTOMER_ORDER_STATUS_DOCUMENT_TYPE FOREIGN KEY (STATUS_DOCUMENT_TYPE_ID) REFERENCES STATUS_DOCUMENT_TYPES (STATUS_DOCUMENT_TYPE_ID),
  CONSTRAINT CK_CUSTOMER_ORDER_DATES CHECK (ORDER_DATE <= ESTIMATED_DELIVERY_DATE)
)
GO

CREATE TABLE CUSTOMER_ORDER_DETAILS
(
  CUSTOMER_ORDER_DETAIL_ID INT NOT NULL IDENTITY(1,1),
  CUSTOMER_ORDER_ID INT NOT NULL,
  REFERENCE_ID INT NOT NULL,
  REQUEST_QUANTITY INT NOT NULL,
  PROCESS_QUANTITY INT DEFAULT 0 NOT NULL,
  DELIVERY_QUANTITY INT DEFAULT 0 NOT NULL,
  BRAND VARCHAR(250),
  CONSTRAINT PK_CUSTOMER_ORDER_DETAIL PRIMARY KEY (CUSTOMER_ORDER_DETAIL_ID),
  CONSTRAINT FK_CUSTOMER_ORDER_DETAIL_CUSTOMER_ORDER FOREIGN KEY (CUSTOMER_ORDER_ID) REFERENCES CUSTOMER_ORDERS (CUSTOMER_ORDER_ID),
  CONSTRAINT FK_CUSTOMER_ORDER_DETAIL_ITEM_REFERENCE FOREIGN KEY (REFERENCE_ID) REFERENCES ITEM_REFERENCES(REFERENCE_ID),
  CONSTRAINT CK_CUSTOMER_ORDER_DETAIL_QUANTITY CHECK ((REQUEST_QUANTITY >= PROCESS_QUANTITY) AND (PROCESS_QUANTITY >= DELIVERY_QUANTITY))  
)
GO

/* CUSTOMER RESERVATIONS */
CREATE TABLE CUSTOMER_RESERVATIONS
(
  CUSTOMER_RESERVATION_ID INT NOT NULL IDENTITY(1,1),
  CUSTOMER_ID INT NOT NULL,
  RESERVATION_NUMBER VARCHAR(10),
  RESERVATION_DATE DATE NOT NULL,
  EXPIRATION_DATE DATE NOT NULL,
  NOTES VARCHAR(250),
  EMPLOYEE_ID INT NOT NULL,
  CUSTOMER_ORDER_ID INT,
  STATUS_DOCUMENT_TYPE_ID SMALLINT NOT NULL,
  CREATION_DATE DATETIME DEFAULT GETDATE() NOT NULL,  
  CONSTRAINT PK_CUSTOMER_RESERVATION PRIMARY KEY (CUSTOMER_RESERVATION_ID),
  CONSTRAINT FK_CUSTOMER_RESERVATION_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS (CUSTOMER_ID),
  CONSTRAINT FK_CUSTOMER_RESERVATION_EMPLOYEES FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES (EMPLOYEE_ID),
  CONSTRAINT FK_CUSTOMER_RESERVATION_STATUS_DOCUMENT_TYPE FOREIGN KEY (STATUS_DOCUMENT_TYPE_ID) REFERENCES STATUS_DOCUMENT_TYPES (STATUS_DOCUMENT_TYPE_ID),
  CONSTRAINT UQ_CUSTOMER_RESERVATION_RESERVATION_NUMBER UNIQUE (RESERVATION_NUMBER),
  CONSTRAINT FK_CUSTOMER_RESERVATION_CUSTOMER_ORDER FOREIGN KEY (CUSTOMER_ORDER_ID) REFERENCES CUSTOMER_ORDERS (CUSTOMER_ORDER_ID),
  CONSTRAINT CK_CUSTOMER_RESERVATION_DATES CHECK (RESERVATION_DATE <= EXPIRATION_DATE)
)
GO

CREATE TABLE CUSTOMER_RESERVATION_DETAILS
(
  CUSTOMER_RESERVATION_DETAIL_ID INT NOT NULL IDENTITY(1,1),
  RESERVATION_ID INT NOT NULL,
  REFERENCE_ID INT NOT NULL,
  RESERVED_QUANTITY integer NOT NULL,
  BRAND varchar(250),
  SEND_TO_CUSTOMER_ORDER BIT DEFAULT 0 NOT NULL,
  CONSTRAINT PK_ITEMRESERVAS PRIMARY KEY (CUSTOMER_RESERVATION_DETAIL_ID)
)
GO

CREATE INDEX IND_ITEMS_LINE ON ITEMS (LINE_ID)
CREATE INDEX IND_ITEMS_NAME ON ITEMS (ITEM_NAME)
CREATE INDEX IND_ITEMS_INTERNAL_REFERENCE ON ITEMS (INTERNAL_REFERENCE)
CREATE INDEX IND_REFERENCES_ITEM_ID ON ITEM_REFERENCES (ITEM_ID)
CREATE INDEX IND_REFERENCES_REFERENCE_NAME ON ITEM_REFERENCES (REFERENCE_NAME)
CREATE INDEX IND_REFERENCES_INTERNAL_REFERENCE_CODE ON ITEM_REFERENCES (INTERNAL_REFERENCE_CODE)
CREATE INDEX IND_FORWARDER_CITY ON FORWARDERS (CITY_ID,FORWARDER_ID)
CREATE INDEX IND_FORWARDER_NAME ON FORWARDERS (CITY_ID,FORWARDER_NAME)
CREATE INDEX IND_CUSTOMER_CITY ON CUSTOMERS (CITY_ID,CUSTOMER_ID)
CREATE INDEX IND_CUSTOMER_CITY_IDENTITY_NUMBER ON CUSTOMERS (CITY_ID,IDENTITY_NUMBER)
CREATE INDEX IND_CUSTOMER_CITY_CUSTOMER_NAME ON CUSTOMERS (CITY_ID,CUSTOMER_NAME)
CREATE INDEX IND_PROVIDER_PROVIDER_NAME ON PROVIDERS (PROVIDER_NAME)
CREATE INDEX IND_PROVIDER_IDENTITY_NUMBER ON PROVIDERS (IDENTITY_NUMBER)
CREATE INDEX IND_SHIPPING_METHODS_NAME ON SHIPPING_METHODS (SHIPPING_METHOD_NAME)
CREATE INDEX IND_PURCHASE_ORDERS_CREATION_DATE ON PURCHASE_ORDERS (CREATION_DATE)
CREATE INDEX IND_PURCHASE_ORDERS_STATUS_DOCUMENT ON PURCHASE_ORDERS (STATUS_DOCUMENT_TYPE_ID) INCLUDE (ORDER_NUMBER, PROVIDER_ID)
CREATE INDEX IND_PURCHASE_ORDERS_REQUEST_DATE ON PURCHASE_ORDERS (REQUEST_DATE) INCLUDE (ORDER_NUMBER, PROVIDER_ID)
CREATE UNIQUE INDEX UQIND_PURCHASE_ORDER_DETAILS ON PURCHASE_ORDER_DETAILS (PURCHASE_ORDER_ID, REFERENCE_ID, WAREHOUSE_ID)
CREATE INDEX IND_PURCHASE_ORDERS_ACTIVITIIES_EXECUTION_DATE ON PURCHASE_ORDER_ACTIVITIES (PURCHASE_ORDER_ID, PURCHASE_ORDER_ACTIVITY_ID, EXECUTION_DATE) INCLUDE (ACTIVITY_DESCRIPTION)
CREATE INDEX IND_CUSTOMER_RESERVATIONS_ESTADO ON CUSTOMER_RESERVATIONS (STATUS_DOCUMENT_TYPE_ID)
CREATE INDEX IND_CUSTOMER_RESERVATIONS_CREATION_DATE ON CUSTOMER_RESERVATIONS (CREATION_DATE)
CREATE INDEX IND_CUSTOMER_RESERVATIONS_RESERVATION_DATE ON CUSTOMER_RESERVATIONS (RESERVATION_DATE)
CREATE INDEX IND_CUSTOMER_RESERVATIONS_CUSTOMER ON CUSTOMER_RESERVATIONS (CUSTOMER_ID)
CREATE INDEX IND_CUSTOMER_RESERVATIONS_CUSTOMER_ORDER ON CUSTOMER_RESERVATIONS (CUSTOMER_ORDER_ID)
CREATE INDEX IND_CUSTOMER_ORDER_ESTADO ON CUSTOMER_ORDERS (STATUS_DOCUMENT_TYPE_ID)
CREATE INDEX IND_CUSTOMER_ORDER_FECHAPEDIDO ON CUSTOMER_ORDERS (ORDER_DATE, CUSTOMER_ID, ORDER_NUMBER)
CREATE INDEX IND_CUSTOMER_ORDER_CUSTOMER ON CUSTOMER_ORDERS (CUSTOMER_ID)
CREATE INDEX IND_CUSTOMER_ORDER_ORDER_NUMBER ON CUSTOMER_ORDERS (ORDER_NUMBER)
CREATE INDEX IND_CUSTOMER_ORDER_CREACION_DATE ON CUSTOMER_ORDERS (CREATION_DATE)
CREATE UNIQUE INDEX UQIND_CUSTOMER_ORDER_DETAILS ON CUSTOMER_ORDER_DETAILS (CUSTOMER_ORDER_ID, REFERENCE_ID)



GO
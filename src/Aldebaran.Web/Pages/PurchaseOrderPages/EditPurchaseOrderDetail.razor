@attribute [Authorize(Roles = "Administrador,Creación de órdenes de compra,Modificación de órdenes de compra")]
@using ServiceModel = Aldebaran.Application.Services.Models;
@using Microsoft.Extensions.Options
@using Aldebaran.Web.Models
@inject IOptions<AppSettings> settings;

<LoadingData IsLoadingData="@isLoadingInProgress" />

@if (!isLoadingInProgress)
{
    <RadzenColumn SizeMD=12>
        <RadzenAlert Shade="Shade.Lighter" Variant="Variant.Flat" Size="AlertSize.Small" AlertStyle="AlertStyle.Danger" @bind-Visible="@IsErrorVisible">
            @Error
        </RadzenAlert>
        <RadzenTemplateForm TItem="ServiceModel.PurchaseOrderDetail" Data="@PurchaseOrderDetail" Submit="@FormSubmit" Visible="@(PurchaseOrderDetail != null)">
            <RadzenStack>
                <RadzenPanel AllowCollapse="true" class="rz-my-00 rz-mx-auto" Style="width: 100%;">
                    <HeaderTemplate>
                        <RadzenText TextStyle="TextStyle.Body2" class="rz-display-flex rz-align-items-center rz-m-0">
                            <RadzenIcon Icon="image" class="rz-me-1" /><b>Imagen del artículo</b>
                        </RadzenText>
                    </HeaderTemplate>
                    <ChildContent>
                        <RadzenStack Orientation="Orientation.Vertical" Style="margin-bottom: 15px;">
                            <RadzenRow Gap="2rem"
                                       Style="margin-bottom: 5px;"
                                       Visible="@(PurchaseOrderDetail.ItemReference != null)">
                                <RadzenColumn Size="12" Style="display: flex; justify-content: center; align-items: center; height: 100%;">
                                    @{
                                        AppSettings _settings = _settings = settings?.Value ?? throw new ArgumentNullException(nameof(IOptions<AppSettings>));
                                        string imagePath = Path.Combine(_settings.ImageRepositoryPath, PurchaseOrderDetail.ItemReference.Item.InternalReference + ".jpg");

                                        // Validar si el archivo existe
                                        var imageExists = System.IO.File.Exists(imagePath);
                                        if (imageExists)
                                        {
                                            var imageUrl = "/externalimages/" + PurchaseOrderDetail.ItemReference.Item.InternalReference + ".jpg";
                                            <RadzenImage Path=@imageUrl style="max-width:30%; height:auto;" />
                                        }
                                        else
                                        {
                                            <p>Imagen no disponible.</p>
                                        }
                                    }
                                </RadzenColumn>
                            </RadzenRow>
                        </RadzenStack>
                    </ChildContent>
                </RadzenPanel>
                <div class="flex-shrink-0">                    
                    <div class="text-secondary-color">
                        <RadzenLabel Text="Referencia: " />
                        @{
                            var fullName = $"[{PurchaseOrderDetail.ItemReference.Item.InternalReference}] {PurchaseOrderDetail.ItemReference.Item.ItemName} - {PurchaseOrderDetail.ItemReference.ReferenceName}";
                        }
                        <RadzenLabel Text="@fullName" />
                    </div>                    
                </div>
                <RadzenRow AlignItems="Radzen.AlignItems.Start">
                    <RadzenColumn Size="12" SizeMD="6">
                        <RadzenFormField Text="Cantidad solicitada" Variant="Variant.Text" Style="width:100%">
                            <ChildContent>
                                <RadzenNumeric style="display: block; width: 100%" @bind-Value="@PurchaseOrderDetail.RequestedQuantity" Name="RequestedQuantity" Format="N0" />
                            </ChildContent>
                            <Helper>
                                <RadzenNumericRangeValidator Component="RequestedQuantity" Min="1" Text="Cantidad solicitada es requerida" />
                            </Helper>
                        </RadzenFormField>
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeMD="6">
                        <RadzenFormField Text="Bodega" Variant="Variant.Text" Style="width:100%">
                            <ChildContent>
                                <RadzenDropDown Data="@Warehouses" TextProperty="WarehouseName" ValueProperty="WarehouseId" AllowClear=true FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                                style="display: block; width: 100%" @bind-Value="@PurchaseOrderDetail.WarehouseId" Name="WarehouseId" />
                            </ChildContent>
                            <Helper>
                                <RadzenNumericRangeValidator Component="WarehouseId" Min="1" Text="Bodega es requerida" />
                            </Helper>
                        </RadzenFormField>
                    </RadzenColumn>
                </RadzenRow>
            </RadzenStack>
            <RadzenRow style="margin-bottom: 1rem">
                <InventoryQuantities Reference="ItemReference" />
            </RadzenRow>
            <RadzenStack style="margin-top:1rem;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0.5rem">
                <RadzenButton ButtonStyle="ButtonStyle.Primary" ButtonType="ButtonType.Submit" Icon="save" Text="Guardar" Variant="Variant.Flat" BusyText="Procesando..." IsBusy="@IsSubmitInProgress" />
                <RadzenButton ButtonStyle="ButtonStyle.Light" Text="Cancelar" Variant="Variant.Flat" Click="@CancelButtonClick" />
            </RadzenStack>
        </RadzenTemplateForm>
    </RadzenColumn>
}

